{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN9AdHXYN85S/e5KNNZLMjF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"5ZjGRqaF-yAw"},"outputs":[],"source":["# Import our dependencies\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.preprocessing import LabelEncoder\n","from keras.utils import to_categorical\n","import pandas as pd\n","import tensorflow as tf\n","from imblearn.over_sampling import RandomOverSampler"]},{"cell_type":"code","source":["# Mount the Google Drive to gain access to functions file\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"M3e2GjszqOd1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712059304570,"user_tz":-60,"elapsed":22297,"user":{"displayName":"mo na","userId":"16790052438334414608"}},"outputId":"2420f3aa-3086-46fe-c222-e337e0d8f37d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Access the notebook with my functions\n","%run '/content/drive/My Drive/Colab Notebooks/Project_4/NN_functions.ipynb'"],"metadata":{"id":"st9x9i5OqO6x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#  Import and read the csv file.\n","df=pd.read_csv(\"https://media.githubusercontent.com/media/DanielHughes1580/Project_4_Group_5/main/Data_Cleaned/dummied_data_add_clean.csv\",index_col=0)\n","#df.head()"],"metadata":{"id":"EsKuDAX_qPSK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Plot the frequency of occurrence\n","plt.figure(figsize=(8, 6))\n","df['Status'].value_counts().plot(kind='bar', color='skyblue')\n","plt.title('Frequency of Occurrence')\n","plt.xlabel('Entries')\n","plt.ylabel('Frequency')\n","plt.xticks(rotation=0)  # Rotate x-axis labels if necessary\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"yCQsscJ6FlZJ","executionInfo":{"status":"ok","timestamp":1712059319151,"user_tz":-60,"elapsed":648,"user":{"displayName":"mo na","userId":"16790052438334414608"}},"outputId":"629eb697-c344-4a6f-d578-e35053414fab"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Call my function to encode, split and scale the data\n","X_train_scaled, X_test_scaled, y_train, y_test = encode_split_and_scale_data(df)\n","\n","# Oversample the minority class (the status you want to overtrain for)\n","ros = RandomOverSampler(random_state=42)\n","X_train_resampled, y_train_resampled = ros.fit_resample(X_train_scaled, y_train)"],"metadata":{"id":"hWYBhwZlG2J2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_scaled"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8W2H7c_xHZBp","executionInfo":{"status":"ok","timestamp":1712059329776,"user_tz":-60,"elapsed":249,"user":{"displayName":"mo na","userId":"16790052438334414608"}},"outputId":"5bee2168-b51c-42e2-f0ab-49b076d50461"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.59319449, -0.74923324, -1.57089884, ..., -0.06434227,\n","        -0.12605944, -0.05786821],\n","       [-0.59319449, -0.74923324,  0.20657534, ..., -0.06434227,\n","        -0.12605944, -0.05786821],\n","       [-0.59319449, -0.20893084,  0.73981759, ..., -0.06434227,\n","        -0.12605944, -0.05786821],\n","       ...,\n","       [-0.59319449,  0.13650839,  0.38432275, ..., -0.06434227,\n","        -0.12605944, -0.05786821],\n","       [-0.59319449,  0.13650839, -0.94878288, ..., -0.06434227,\n","        -0.12605944, -0.05786821],\n","       [-0.59319449, -0.52779783, -0.32666692, ..., -0.06434227,\n","        -0.12605944, -0.05786821]])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Call the model to define, fit and evaluate the neural network model.\n","# This model will have 2 hidden layers with 50 neurons in each using the \"relu\" activation function and will train for 10 epochs\n","nn = define_and_fit_nn_model(X_train_resampled, X_test_scaled, y_train_resampled, y_test, 2, 50, \"relu\",10)\n","# Look at the prediction for 5 rows\n","nn_predict(nn,y_test,X_test_scaled)\n","# Save the model in the native Keras format\n","nn.save(\"/content/drive/My Drive/Colab Notebooks/Project_4/NN_opt_oversample_2_layers_50_neurons.keras\")"],"metadata":{"id":"aTEfwtbpq0gC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712059872970,"user_tz":-60,"elapsed":513700,"user":{"displayName":"mo na","userId":"16790052438334414608"}},"outputId":"22a3a79f-2f69-48d7-c2b2-fce7c50e8c57"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input features: 48\n","Adding layer\n","Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 50)                2450      \n","                                                                 \n"," dense_1 (Dense)             (None, 50)                2550      \n","                                                                 \n"," dense_2 (Dense)             (None, 3)                 153       \n","                                                                 \n","=================================================================\n","Total params: 5153 (20.13 KB)\n","Trainable params: 5153 (20.13 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n","Epoch 1/10\n","23137/23137 [==============================] - 48s 2ms/step - loss: 1.0296 - accuracy: 0.4610\n","Epoch 2/10\n","23137/23137 [==============================] - 46s 2ms/step - loss: 0.9802 - accuracy: 0.5085\n","Epoch 3/10\n","23137/23137 [==============================] - 48s 2ms/step - loss: 0.9599 - accuracy: 0.5257\n","Epoch 4/10\n","23137/23137 [==============================] - 48s 2ms/step - loss: 0.9479 - accuracy: 0.5350\n","Epoch 5/10\n","23137/23137 [==============================] - 46s 2ms/step - loss: 0.9399 - accuracy: 0.5413\n","Epoch 6/10\n","23137/23137 [==============================] - 45s 2ms/step - loss: 0.9346 - accuracy: 0.5450\n","Epoch 7/10\n","23137/23137 [==============================] - 48s 2ms/step - loss: 0.9303 - accuracy: 0.5473\n","Epoch 8/10\n","23137/23137 [==============================] - 46s 2ms/step - loss: 0.9272 - accuracy: 0.5495\n","Epoch 9/10\n","23137/23137 [==============================] - 46s 2ms/step - loss: 0.9242 - accuracy: 0.5516\n","Epoch 10/10\n","23137/23137 [==============================] - 49s 2ms/step - loss: 0.9221 - accuracy: 0.5530\n","6049/6049 - 8s - loss: 0.9464 - accuracy: 0.5328 - 8s/epoch - 1ms/step\n","\n"," Test Data Loss: 0.9463984966278076, Test Data Accuracy: 0.5327863693237305\n","\n"," test input:  \n","[[0. 1. 0.]\n"," [1. 0. 0.]\n"," [0. 0. 1.]\n"," [0. 1. 0.]\n"," [1. 0. 0.]]\n","1/1 [==============================] - 0s 92ms/step\n","\n"," test output: \n","[[0.3434648  0.54492044 0.11161476]\n"," [0.19311264 0.3277996  0.47908774]\n"," [0.3805763  0.12227509 0.49714866]\n"," [0.31175604 0.5056618  0.18258215]\n"," [0.17979775 0.55634683 0.2638553 ]]\n"]}]}]}